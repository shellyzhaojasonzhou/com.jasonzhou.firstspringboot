https://artifact.aspose.com/repo/com/aspose/aspose-slides/15.11.0/



这意味着对于Arial Narrow，删除了太多字符，因此最后一行是emtpy的一半。 使用Verdana时，不会删除足够的字符，因此文本会超出矩形。

我发现我的截断代码适用于Arial字体，但其他字体不太可靠。

我有一个新问题的例子，如下。 它创建三个矩形并将它们并排放置。 然后对所有三个矩形进行完全相同的处理，除了它们被分配的字体。 最后，矩形的高度写在幻灯片的底部。

我已经附加了创建的.PPT文件，因此您可以自己查看问题。 您应该看到Arial Narrow矩形的字符太少。 Verdana矩形有太多字符并且溢出。











感谢您对Aspose.Slides的关注。

嗯，经过详细调查，确定了问题的确切来源。不幸的是，MS Office使用标准GDI，而.NET Framework使用GDI +进行文本呈现。此外，正如Microsoft在本文中所解释的那样，GDI和GDI +的文本呈现存在差异。解决这种差异的最佳实践已经在Aspose.Slides for .NET中实现。它适用于较大字体的较小文本，但较大字体和较小字体会增加测量差异的可能性。已添加了您在以前的帖子中通过MS PowerPoint和Aspose.Slides与Arial字体使用时提供的文本的比较。由于这种渲染差异，已经观察到每15行具有字体大小为10的Arial字体的一个包装错误。与其他字体一样，会有更多差异。

希望这有助于理解由于这些文本呈现差异而产生的限制



sudo fc-cache -fv


sudo fc-cache